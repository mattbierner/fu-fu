{"version":3,"sources":["components/logo.svg","components/Footer.tsx","config.ts","util/choose.ts","util/text.ts","model/providers/bad.ts","model/providers/badWord.ts","model/model.ts","model/providers/good.ts","model/providers/image.ts","components/form/Add.tsx","components/form/Component.tsx","components/form/LaunchButton.tsx","components/form/index.tsx","components/Header.tsx","theme.tsx","App.tsx","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","root","marginTop","marginBottom","fontSize","color","palette","text","secondary","fontStyle","textDecoration","copyright","Footer","classes","className","href","style","isMeta","document","location","search","includes","selectRandom","arr","Math","floor","random","length","capitalize","value","toUpperCase","slice","xIsBadPhraseProvider","targets","what","plural","phrases","target","verb","config","this","phrase","ComponentType","wordProvider","choices","repeat","xIsGoodPhraseProvider","imagePhraseProvider","image","allComponentTypes","x_is_good","x_is_bad","word","meta","componentTypeToLabel","type","Error","Model","components","textBody","filter","map","getValue","host","pathname","join","find","imageValue","compoent","index","empty","paddingBottom","paddingTop","description","select","padding","Add","props","styles","model","hasImage","some","x","options","key","disabled","onChange","event","handleSelect","component","margin","outline","display","border","alignItems","borderRadius","userSelect","backgroundColor","borderRight","width","height","borderTopLeftRadius","borderBottomLeftRadius","justifyContent","content","backgroundImage","ComponentElement","onClick","addButton","borderWidth","primary","main","textAlign","boxShadow","Color","darken","hex","opacity","explainer","LaunchButton","title","onPressed","flex","header","flexDirection","fontWeight","borderBottom","spacer","Form","elements","i","updateModel","remove","reduceRight","p","c","add","onLaunch","logo","maxWidth","links","Header","src","alt","App","state","ThemeProvider","bind","launch","newModel","setState","toTweet","window","open","encodeURIComponent","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9949df33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3bbc7bde.svg\";","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { Theme } from '../theme';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n    root: {\n        marginTop: '4em',\n        marginBottom: '2em',\n        fontSize: '0.8em',\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic',\n\n        '& a': {\n            color: theme.palette.text.secondary,\n            textDecoration: 'none'\n        },\n\n        '& a:hover': {\n            textDecoration: 'underline'\n        }\n    },\n    copyright: {\n        fontStyle: 'normal',\n    }\n}));\n\n\nexport const Footer = () => {\n    const classes = useStyles();\n    return (\n        <footer className={classes.root}>\n            <p>This regret brought to you by <a href='https://twitter.com/mattbierner'>@mattbierner</a></p>\n            <p className={classes.copyright}>&copy; 2019</p>\n            <br />\n            <p style={{ fontSize: '0.8em' }}>By using this site, you assume all responsibility for whatever happens to both present and future you</p>\n        </footer>\n    )\n}","/**\n * Maximum number of non-image components\n */\nexport const maxTextualComponentCount = 5;\n\nexport const isMeta = document.location.search.includes('meta');\n\nexport const homepage = 'https://mattbierner.github.io/fu-fu'\n\nexport const aboutLink = 'https://mattbierner.com/fu-fu';\n\nexport const sourceLink = 'https://github.com/mattbierner/fu-fu';\n\nexport const debug = false;","export function selectRandom<T>(arr: readonly T[]): T {\n    return arr[Math.floor(Math.random() * arr.length)];\n}","export function capitalize(value: string): string {\n    if (!value.length) {\n        return value;\n    }\n    return value[0].toUpperCase() + value.slice(1);\n}\n","import * as config from '../../config';\nimport { selectRandom } from \"../../util/choose\";\nimport { capitalize } from \"../../util/text\";\n\ntype Target = {\n    readonly what: string;\n    readonly plural?: boolean;\n};\n\n/**\n * Provides \"____ is bad\" style phrases.\n */\nexport const xIsBadPhraseProvider = new class {\n    private targets: readonly Target[] = [\n        // General\n        { what: 'babies', plural: true },\n\n        { what: 'compassion', },\n        { what: 'emotions', plural: true },\n        { what: 'empathy', },\n        { what: 'love', },\n\n        { what: 'rural people', plural: true },\n        { what: 'women', plural: true },\n        { what: 'homosexuals', plural: true },\n        { what: 'immigrants', plural: true },\n\n        // Punch down\n        { what: 'disabled people', plural: true },\n        { what: 'handicapped people', plural: true },\n        { what: 'homeless people', plural: true },\n        { what: 'old people', plural: true },\n        { what: 'hospital patients', plural: true },\n        { what: 'poor people', plural: true },\n        { what: 'weaklings', plural: true },\n        { what: 'nerds', plural: true },\n\n        // race\n        { what: 'brown people', plural: true },\n        { what: 'black people', plural: true },\n        { what: 'white people', plural: true },\n        { what: 'non-white people', plural: true },\n        { what: 'desegregation', },\n        { what: 'integration', },\n\n        // Religion\n        { what: 'non-believers', plural: true },\n        { what: 'religious people', plural: true },\n        { what: 'Islam', },\n        { what: 'muslims', plural: true },\n        { what: 'Jews', plural: true },\n        { what: 'Jesus', },\n        { what: 'Buddha', },\n        { what: 'Muhammad', },\n        { what: 'God', },\n    ];\n\n    private readonly phrases = [\n        (target: Target) => `${capitalize(target.what)} ${verb(target.plural)} bad!`,\n        (target: Target) => `${capitalize(target.what)} ${verb(target.plural)} evil!!!`,\n        (target: Target) => `I blame ${target.what}!`,\n        (target: Target) => `We must destroy ${target.what}!`,\n        (target: Target) => `${capitalize(target.what)} suck${target.plural ? '' : 's'}!!!`,\n        (target: Target) => `Boooo ${target.what}!!!`,\n        (target: Target) => `Suck it ${target.what}!`,\n    ];\n\n    getValue() {\n        const value: Target = config.isMeta\n            ? { what: 'Tweets', plural: true }\n            : selectRandom(this.targets);\n        const phrase = selectRandom(this.phrases);\n        return phrase(value);\n    }\n}();\n\n\nfunction verb(plural: boolean | undefined) {\n    return plural ? 'are' : 'is';\n}","import { selectRandom } from \"../../util/choose\";\n\n/**\n * Words people have gotten in trouble for using (often rightly so)\n */\nexport const wordProvider = new class {\n    private choices: readonly string[] = [\n        'bitch',\n        'bitches',\n        'fag',\n        'faggot',\n        'nigger',\n        'niggers',\n        'chink',\n        'chinks',\n        'retards',\n    ];\n\n    getValue(): string {\n        return selectRandom(this.choices).toUpperCase() + '!'.repeat(1 + Math.floor(Math.random() * 3));\n    }\n}();\n\n","import * as config from '../config';\nimport { xIsBadPhraseProvider } from './providers/bad';\nimport { wordProvider } from './providers/badWord';\nimport { xIsGoodPhraseProvider } from './providers/good';\nimport { imagePhraseProvider } from './providers/image';\n\nexport enum ComponentType {\n    x_is_good = 'x_is_good',\n    x_is_bad = 'x_is_bad',\n    word = 'word',\n    image = 'image',\n    meta = 'meta',\n}\n\nexport const allComponentTypes = [\n    ComponentType.x_is_good,\n    ComponentType.x_is_bad,\n    ComponentType.word,\n    ComponentType.image,\n    ...(config.isMeta ? [ComponentType.meta] : [])\n];\n\nexport function componentTypeToLabel(type: ComponentType): string {\n    switch (type) {\n        case ComponentType.x_is_good: return '_____ is good';\n        case ComponentType.x_is_bad: return '_____ is bad';\n        case ComponentType.image: return 'Image';\n        case ComponentType.word: return 'Word';\n        case ComponentType.meta: return 'Meta';\n        default: throw new Error('Unknown type');\n    }\n}\n\nexport class Model {\n    public static readonly empty = new Model([\n        ComponentType.x_is_bad\n    ]);\n\n    constructor(\n        public readonly components: readonly ComponentType[],\n    ) { }\n\n    public toTweet(): string {\n        const textBody = this.components\n            .filter(type => type !== ComponentType.image) // add images at end\n            .map(type => {\n                switch (type) {\n                    case ComponentType.x_is_good:\n                        return xIsGoodPhraseProvider.getValue();\n\n                    case ComponentType.x_is_bad:\n                        return xIsBadPhraseProvider.getValue();\n\n                    case ComponentType.word:\n                        return wordProvider.getValue();\n\n                    case ComponentType.meta:\n                        return `Heyyy so I made this site... https://${document.location.host}${document.location.pathname}`;\n\n                    default:\n                        throw new Error(`Unknown type: ${type}`);\n                }\n            }).join(' ');\n\n        const image = this.components.find(type => type === ComponentType.image)\n        if (image) {\n            const imageValue = imagePhraseProvider.getValue();\n            if (this.components.length === 1) {\n                return imageValue;\n            }\n            return textBody + '\\n\\n' + imageValue;\n        } else {\n            return textBody;\n        }\n    }\n\n    public add(compoent: ComponentType): Model {\n        return new Model([...this.components, compoent]);\n    }\n\n    public remove(index: number): Model {\n        return new Model([\n            ...this.components.slice(0, index),\n            ...this.components.slice(index + 1)\n        ]);\n    }\n}","import * as config from '../../config';\nimport { selectRandom } from \"../../util/choose\";\nimport { capitalize } from \"../../util/text\";\n\ntype Target = {\n    readonly what: string;\n    readonly verb: 'is' | 'are';\n};\n\n/**\n * Provides \"____ is good\" style phrases\n */\nexport const xIsGoodPhraseProvider = new class GoodProvider {\n    private targets: readonly Target[] = [\n        // General\n        { what: 'greed', verb: 'is' },\n        { what: 'privilege', verb: 'is' },\n        { what: 'bullying', verb: 'is' },\n        { what: 'oppression', verb: 'is' },\n        { what: 'violence', verb: 'is' },\n        { what: 'punching down', verb: 'is' },\n        { what: 'heroin', verb: 'is' },\n        { what: 'smoking', verb: 'is' },\n        { what: 'cancer', verb: 'is' },\n        { what: 'cannibalism', verb: 'is' },\n        { what: 'dictatorships', verb: 'are' },\n        { what: 'terrorism', verb: 'is' },\n        { what: 'ISIS', verb: 'is' },\n        { what: 'body shaming', verb: 'is' },\n        { what: 'slavery', verb: 'is' },\n\n        // sexual\n        { what: 'The Republic of Gilead', verb: 'is' },\n        { what: 'aids', verb: 'is' },\n        { what: 'rape', verb: 'is' },\n        { what: 'necrophilia', verb: 'is' },\n        { what: 'pedophilia', verb: 'is' },\n        { what: 'gor', verb: 'is' },\n        { what: 'sexual slavery', verb: 'is' },\n\n        // the other\n        { what: 'racial purity', verb: 'is' },\n        { what: 'segregation', verb: 'is' },\n        { what: 'The Holocaust', verb: 'is' },\n        { what: 'eugenics', verb: 'is' },\n        { what: 'Nazis', verb: 'are' },\n\n        // 90s\n        { what: 'Charles Manson', verb: 'is' },\n        { what: 'Satan', verb: 'is' },\n        { what: 'school shootings', verb: 'are' },\n        { what: 'child sacrifice', verb: 'is' },\n    ];\n\n    private readonly phrases = [\n        (target: Target) => `${capitalize(target.what)} ${target.verb} great!!!`,\n        (target: Target) => `${capitalize(target.what)} ${target.verb} the best!`,\n        (target: Target) => `${capitalize(target.what)} ${target.verb} good!`,\n        (target: Target) => `${capitalize(target.what)} ${target.verb} necessary!`,\n        (target: Target) => `${capitalize(target.what)} ${target.verb} my favorite!`,\n        (target: Target) => `${capitalize(target.what)} ${target.verb} 🔥🔥🔥!`,\n        (target: Target) => `I love ${target.what}!`,\n        (target: Target) => `I ❤️ ${target.what}!!!`,\n        (target: Target) => `❤️${target.what.toUpperCase()}️❤️`,\n        (target: Target) => `Yay for ${target.what}!`,\n        (target: Target) => `Go ${target.what}!!!`,\n    ];\n\n    getValue() {\n        const value: Target = config.isMeta\n            ? { what: 'outrage machine', verb: 'is' }\n            : selectRandom(this.targets);\n        const phrase = selectRandom(this.phrases);\n        return phrase(value);\n    }\n}();\n","import * as config from \"../../config\";\nimport { selectRandom } from \"../../util/choose\";\n\n/**\n * Provides images.\n */\nexport const imagePhraseProvider = new class {\n    private choices: readonly string[] = [\n        'dick.png',\n        'blackface.png',\n    ];\n\n    getValue(): string {\n        const image = selectRandom(this.choices);\n        return `${config.homepage}/tweetMedia/${image}`;\n    }\n}();\n\n","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { maxTextualComponentCount } from '../../config';\nimport { allComponentTypes, ComponentType, componentTypeToLabel, Model } from '../../model/model';\nimport { Theme } from '../../theme';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n    root: {\n        paddingBottom: '2em',\n        paddingTop: '1em',\n    },\n    description: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic',\n        fontSize: '0.9rem',\n    },\n    select: {\n        padding: '2em',\n        fontSize: '1em',\n    }\n}));\n\n\nexport const Add: React.FC<{\n    model: Model,\n    handleSelect: (value: ComponentType | '') => void\n}> = (props) => {\n    const styles = useStyles();\n\n    if (props.model.components.filter(type => type !== ComponentType.image).length >= maxTextualComponentCount) {\n        return (\n            <div className={styles.root}>\n                <p className={styles.description} style={{ marginBottom: 0 }} >\n                    That's enough. For this time...\n                </p>\n            </div >\n        );\n    }\n\n    const onChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        props.handleSelect(event.target.value as ComponentType)\n    };\n\n    const hasImage: boolean = !!props.model.components.some(x => x === ComponentType.image);\n\n    const options = allComponentTypes.map(type =>\n        <option\n            value={type}\n            key={type}\n            disabled={type === ComponentType.image && hasImage}\n        >{componentTypeToLabel(type)}</option>\n    );\n\n    return (\n        <div className={styles.root}>\n            <p className={styles.description}>{props.model.components.length === 0 ? \"Add\" : \"Add Another\"}</p>\n            <select\n                value={''}\n                onChange={onChange}\n                className={styles.select}\n            >\n                <option value={''} disabled={true}>Select</option>\n                {options}\n            </select>\n        </div>\n    );\n}\n\n","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { ComponentType, componentTypeToLabel } from '../../model/model';\nimport { Theme } from '../../theme';\n\nconst borderRadius = '4px';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n    component: {\n        margin: '0.6em auto',\n        outline: 'none',\n        display: 'flex',\n        border: '1px solid lightgray',\n        alignItems: 'center',\n        borderRadius: borderRadius,\n        padding: 0,\n        userSelect: 'none',\n        backgroundColor: 'white',\n\n        '& .icon': {\n            borderRight: '1px solid lightgray',\n            padding: '4px',\n            width: '24px',\n            height: '24px',\n            borderTopLeftRadius: borderRadius,\n            borderBottomLeftRadius: borderRadius,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        [`& .icon::after`]: {\n            content: '\"\"',\n            display: 'block',\n            width: '20px',\n            height: '20px',\n        },\n        [`& .icon.${ComponentType.x_is_bad}::after`]: {\n            backgroundImage: 'url(images/frown.svg)',\n        },\n        [`& .icon.${ComponentType.x_is_good}::after`]: {\n            backgroundImage: 'url(images/smile.svg)',\n        },\n        [`& .icon.${ComponentType.word}::after`]: {\n            backgroundImage: 'url(images/swear.svg)',\n        },\n        [`& .icon.${ComponentType.image}::after`]: {\n            backgroundImage: 'url(images/picture.svg)',\n        },\n        [`& .icon.${ComponentType.meta}::after`]: {\n            backgroundImage: 'url(images/cat.svg)',\n        },\n        '&:hover .icon::after': {\n            backgroundImage: 'url(images/x.svg)',\n        },\n\n        '& .label': {\n            padding: '0.6em 0.8em',\n        },\n    }\n}));\n\n\nexport const ComponentElement: React.FC<{ type: ComponentType, onClick: () => void }> = (props) => {\n    const classes = useStyles();\n\n    return (\n        <button className={classes.component} onClick={props.onClick}>\n            <div className={'icon ' + props.type}></div><span className='label'>{componentTypeToLabel(props.type)}</span>\n        </button>\n    );\n};\n\n","import { makeStyles } from '@material-ui/styles';\nimport Color from 'color';\nimport React from 'react';\nimport { Model } from '../../model/model';\nimport { Theme } from '../../theme';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n    root: {\n        marginTop: '0.5em',\n    },\n    addButton: {\n        userSelect: 'none',\n        borderWidth: '0',\n        borderRadius: '100px',\n        fontSize: '20px',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        padding: '1rem',\n        textAlign: 'center',\n        outline: 'none',\n        boxShadow: '0 0 10px #aaaaaa',\n\n        '&:active': {\n            backgroundColor: Color(theme.palette.primary.main).darken(0.1).hex()\n        },\n        '&:disabled': {\n            opacity: 0.75,\n        },\n    },\n    explainer: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic',\n        fontSize: '0.9rem',\n    },\n}));\n\nexport const LaunchButton: React.FC<{ readonly model: Model, onPressed: () => void }> = (props) => {\n    const classes = useStyles();\n\n    const disabled = props.model.components.length === 0;\n    return (\n        <div className={classes.root}>\n            <button\n                disabled={disabled}\n                title={\"launch\"}\n                className={classes.addButton}\n                onClick={props.onPressed}\n            >LAUNCH</button>\n            {!disabled && <p className={classes.explainer}>\n                Make sure to use an account that<br />will be tracable back to future you\n            </p>}\n        </div>\n    )\n}\n","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { ComponentType, Model } from '../../model/model';\nimport { Theme } from '../../theme';\nimport { Add } from './Add';\nimport { ComponentElement } from './Component';\nimport { LaunchButton } from './LaunchButton';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n    root: {\n        flex: 1,\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: '2em',\n\n        '& span': {\n            color: theme.palette.text.secondary,\n            fontStyle: 'italic',\n            fontSize: '0.9rem',\n        }\n    },\n    title: {\n        fontWeight: 'normal',\n        padding: '0 1em',\n        paddingBottom: '0.4em',\n        borderBottom: `2px solid ${theme.palette.primary.main}`,\n        marginBottom: '0.2em',\n    },\n    spacer: {\n        '&:after': {\n            content: '\"+\"',\n            display: 'block',\n            color: theme.palette.text.secondary,\n        }\n    }\n}));\n\ninterface FormProps {\n    readonly model: Model;\n\n    readonly updateModel: (model: Model) => void;\n    readonly onLaunch: (model: Model) => void;\n}\n\nexport const Form: React.FC<FormProps> = (props) => {\n    const classes = useStyles();\n\n    const handleAdd = (value: ComponentType | '') => {\n        if (!value) {\n            return;\n        }\n        props.updateModel(props.model.add(value));\n    };\n\n    const elements = props.model.components.map((x, i) => {\n        return <ComponentElement\n            type={x}\n            onClick={() => {\n                props.updateModel(props.model.remove(i));\n            }}\n            key={i} />;\n    });\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <h3 className={classes.title}>Build Your Future Regrets</h3>\n                <span>\n                    Select the basic components of your future regretable expression<br />\n                    We'll turn these into a random tweet when you press *launch*\n                </span>\n            </header>\n            {elements.reduceRight((p, c, i) => {\n                const spacer = i === elements.length - 1 ? null : <span key={'spacer' + i} className={classes.spacer} />\n                return [c, spacer, ...p];\n            }, [] as any[])}\n            <Add\n                model={props.model}\n                handleSelect={handleAdd} />\n            <LaunchButton model={props.model} onPressed={() => props.onLaunch(props.model)} />\n        </div>\n    )\n}\n\n","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport * as config from '../config';\nimport { Theme } from '../theme';\nimport logo from './logo.svg';\n\n\nconst useStyles = makeStyles<Theme>(theme => ({\n    root: {\n        paddingTop: '3em',\n        paddingBottom: '2em',\n    },\n    logo: {\n        maxWidth: '300px'\n    },\n    links: {\n        display: 'flex',\n        justifyContent: 'center',\n        '& a': {\n            display: 'block',\n            margin: '0 1em',\n            color: theme.palette.text.secondary,\n            textDecoration: 'none'\n        },\n        '& a:hover': {\n            color: theme.palette.primary.main,\n            textDecoration: 'underline'\n        }\n    }\n}));\n\nexport const Header = () => {\n    const styles = useStyles();\n    return (\n        <header className={styles.root}>\n            <img src={logo} className={styles.logo} alt=\"logo\" />\n            <p>Send your future self a message they'll be sure to regret</p>\n            <nav className={styles.links}>\n                <a href={config.aboutLink}>About</a>\n                <a href={config.sourceLink}>Source</a>\n            </nav>\n        </header>\n    )\n} ","export const theme = {\n    palette: {\n        primary: {\n            main: '#ff0049'\n        },\n        text: {\n            primary: '#333333',\n            secondary: '#777777'\n        }\n    }\n};\n\nexport type Theme = typeof theme;","import { ThemeProvider } from '@material-ui/styles';\nimport React from 'react';\nimport './App.css';\nimport { Footer } from './components/Footer';\nimport { Form } from './components/form';\nimport { Header } from './components/Header';\nimport * as config from './config';\nimport { Model } from './model/model';\nimport { theme } from './theme';\n\nclass App extends React.Component<{}, { model: Model }> {\n    constructor(props: {}) {\n        super(props);\n\n        this.state = {\n            model: Model.empty\n        }\n    }\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <Header />\n                    <Form\n                        model={this.state.model}\n                        updateModel={this.updateModel.bind(this)}\n                        onLaunch={this.launch.bind(this)} />\n                    <Footer />\n                </div>\n            </ThemeProvider>\n        );\n    }\n\n    private updateModel(newModel: Model) {\n        this.setState({ model: newModel })\n    }\n\n    private launch(model: Model): void {\n        const text = model.toTweet();\n        if (config.debug) {\n            console.log(text);\n        } else {\n            window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`)\n        }\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}